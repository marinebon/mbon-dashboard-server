version: '3.3'

services:
  nginx:
    container_name: nginx
    build: ./nginx
    restart: unless-stopped
    ports:
      #- 8088:80
      - 80:80

  # docker run -d -p 8080:8080 --name erddap axiom/docker-erddap
  erddap:
    user: root:4504
    container_name: erddap
    build: ./erddap
    volumes:
     - ./erddap/erddap_data:/erddapData
     - ./erddap/content:/usr/local/tomcat/content/erddap
     # === ERDDAP dataset mounts==============================================
     # NOTE: paths must match "fileDir" paths in erddap/content/datsets.xml
     - /srv/imars-objects:/srv/erddap-datasets:ro,slave
     # =======================================================================
    restart: unless-stopped
    ports:
      - 8080:8080
 # sudo docker exec -it erddap bash -c "cd /usr/local/tomcat/webapps/erddap/WEB-INF && bash GenerateDatasetsXml.sh -verbose"

  grafana:
      container_name: grafana
      image: grafana/grafana:6.7.3
      ports:
          - 3000:3000
      environment:
          - "GF_INSTALL_PLUGINS=alexandra-trackmap-panel,pierosavi-imageit-panel,https://github.com/USF-IMARS/grafana-erddap/releases/download/1.0.0/grafana-erddap.zip;grafana-erddap"
          - GF_PATHS_PROVISIONING=/grafana_provisioning
          - GF_AUTH_ANONYMOUS_ENABLED=true
          - GF_SECURITY_ADMIN_USER=imars_grafana_user
          - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
          - INFLUXDB_HOSTNAME=http://192.168.1.247:8086
          - INFLUXDB_GRAPHITE_HOSTNAME=http://192.168.1.247:2003
      volumes:
          - ./grafana/provisioning:/grafana_provisioning
          - ./grafana/grafana-storage:/var/lib/grafana

  influxdb:
        container_name: influxdb
        image: influxdb:1.8
        ports:
            - 8086:8086  # HTTP API
            - 2003:2003  # graphite API
        volumes:
            # init the db by putting .sh or .iql files in /docker-entrypoint-initdb.d
            # this should inlcude adding a read-only user for grafana
            - ./influxdb/initdb:/docker-entrypoint-initdb.d
            # docker data volume:
            - ./influxdb/data_volume:/var/lib/influxdb
        environment:
            - INFLUXDB_DB=fwc_coral_disease
            - INFLUXDB_GRAPHITE_ENABLED=true
            - INFLUXDB_HTTP_AUTH_ENABLED=false  # TODO: make this true & + users. See
            # - INFLUXDB_USER=influx_user         #       See https://github.com/influxdata/influxdata-docker/issues/232
            # - INFLUXDB_ADMIN_USER=influx_admin  #       and https://github.com/influxdata/influxdata-docker/issues/224
            # - INFLUXDB_READ_USER=grafana
            # - INFLUXDB_WRITE_USER=telegraf

  mbon_data_uploader:
      container_name: mbon_data_uploader
      build: ./mbon_data_uploader
      ports:
          - 5000:5000
      environment:
          - FLASK_APP=mbon_data_uploader  # TODO: this can be deleted?
          - INFLUXDB_HOSTNAME=192.168.1.247:8086

  airflow_postgres:
      container_name: postgres
      image: postgres:9.6
      environment:
        - POSTGRES_USER=airflow
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=airflow
      volumes:
          - ./postgres/pgdata:/var/lib/postgresql/data

  airflow_webserver:
    container_name: airflow_webserver
    image: puckel/docker-airflow:1.10.9
    restart: always
    # mem_limit: 2048m
    depends_on:
        - airflow_postgres
    env_file:
        - .env
    environment:
        - LOAD_EX=n
        - EXECUTOR=Local
    volumes:
        - /srv/imars-objects:/srv/imars-objects:ro,slave
        - ./airflow/dags:/usr/local/airflow/dags
        # - ./airflow/test:/usr/local/airflow/test
        # - ./airflow/plugins:/usr/local/airflow/plugins
        # - ./airflow/requirements.txt:/requirements.txt
        # - ~/airflow/.aws:/usr/local/airflow/.aws
    ports:
        - "8888:8080"
    command: webserver
    healthcheck:
        test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
        interval: 30s
        timeout: 30s
        retries: 3
    environment:
        - UPLOADER_HOSTNAME=http://192.168.1.247:5000
